########################################################  ReviseWithArsh  #######################################################

###### Company : Goldman Sachs ######

###### Day-1 ######

####################################

# Problem : Print Anagrams together
# Link : https://practice.geeksforgeeks.org/problems/print-anagrams-together/1/

from collections import defaultdict
def Anagrams(self, words, n):
    '''
    words: list of word
    n:      no of words
    return : list of group of anagram {list will be sorted in driver code (not word in grp)}
    '''
    d=defaultdict(list)
    for i in words:
        sortedword=str(sorted(i))
        d[sortedword].append(i)
        
    ans=[]
    for i in d:
        ans.append(d[i])
    return ans

####################################

# Problem : Count the subarrays having product less than k
# Link : https://practice.geeksforgeeks.org/problems/count-the-subarrays-having-product-less-than-k1708/1/

def countSubArrayProductLessThanK(self, a, n, k):
    #Code here
    i=0
    j=0
    c=0
    p=1
    while(j<n):
        p=p*a[j]
        while(p>=k):
            p=p//a[i]
            i+=1
        c=c+(j-i+1)
        j+=1
    return c

#####################################

# Problem : Overlapping rectangles
# Link : https://practice.geeksforgeeks.org/problems/overlapping-rectangles1924/1/
# Hint : Check for 4 conditions (1st rectangle is completely left to other, completely right to other, completely top of the other
# or completely bottom of the other)

def doOverlap(self, L1, R1, L2, R2):
    #code here
    if((L1[0]<L2[0] and R1[0]<L2[0]) or (L1[0]>R2[0] and R1[0]>R2[0]) or (L1[1]<R2[1] and R1[1]<R2[1]) or (L1[1]>L2[1] and R1[1]>L2[1])):
        return 0
    else:
        return 1

            (or)

def doOverlap(self, L1, R1, L2, R2):
    #code here
    if((R1[0]<L2[0]) or (L1[0]>R2[0]) or (R1[1]>L2[1]) or (L1[1]<R2[1])):
        return 0
    else:
        return 1

####################################
